part of ice;

class Property {
  final String pattern;
  final bool deprecated;
  final String? deprecatedBy;

  const Property(this.pattern, this.deprecated, [this.deprecatedBy]);
}

const IcePropsData = [
  Property('Ice.AcceptClassCycles', false),
  Property('Ice.ACM.Client', true),
  Property('Ice.ACM.Server', true),
  Property('Ice.ACM.Timeout', false),
  Property('Ice.ACM.Heartbeat', false),
  Property('Ice.ACM.Close', false),
  Property('Ice.ACM', false),
  Property('Ice.ACM.Client.Timeout', false),
  Property('Ice.ACM.Client.Heartbeat', false),
  Property('Ice.ACM.Client.Close', false),
  Property('Ice.ACM.Client', false),
  Property('Ice.ACM.Server.Timeout', false),
  Property('Ice.ACM.Server.Heartbeat', false),
  Property('Ice.ACM.Server.Close', false),
  Property('Ice.ACM.Server', false),
  Property('Ice.Admin.ACM.Timeout', false),
  Property('Ice.Admin.ACM.Heartbeat', false),
  Property('Ice.Admin.ACM.Close', false),
  Property('Ice.Admin.ACM', false),
  Property('Ice.Admin.AdapterId', false),
  Property('Ice.Admin.Endpoints', false),
  Property('Ice.Admin.Locator.EndpointSelection', false),
  Property('Ice.Admin.Locator.ConnectionCached', false),
  Property('Ice.Admin.Locator.PreferSecure', false),
  Property('Ice.Admin.Locator.LocatorCacheTimeout', false),
  Property('Ice.Admin.Locator.InvocationTimeout', false),
  Property('Ice.Admin.Locator.Locator', false),
  Property('Ice.Admin.Locator.Router', false),
  Property('Ice.Admin.Locator.CollocationOptimized', false),
  Property('Ice.Admin.Locator.Context.*', false),
  Property('Ice.Admin.Locator', false),
  Property('Ice.Admin.PublishedEndpoints', false),
  Property('Ice.Admin.ReplicaGroupId', false),
  Property('Ice.Admin.Router.EndpointSelection', false),
  Property('Ice.Admin.Router.ConnectionCached', false),
  Property('Ice.Admin.Router.PreferSecure', false),
  Property('Ice.Admin.Router.LocatorCacheTimeout', false),
  Property('Ice.Admin.Router.InvocationTimeout', false),
  Property('Ice.Admin.Router.Locator', false),
  Property('Ice.Admin.Router.Router', false),
  Property('Ice.Admin.Router.CollocationOptimized', false),
  Property('Ice.Admin.Router.Context.*', false),
  Property('Ice.Admin.Router', false),
  Property('Ice.Admin.ProxyOptions', false),
  Property('Ice.Admin.ThreadPool.Size', false),
  Property('Ice.Admin.ThreadPool.SizeMax', false),
  Property('Ice.Admin.ThreadPool.SizeWarn', false),
  Property('Ice.Admin.ThreadPool.StackSize', false),
  Property('Ice.Admin.ThreadPool.Serialize', false),
  Property('Ice.Admin.ThreadPool.ThreadIdleTime', false),
  Property('Ice.Admin.ThreadPool.ThreadPriority', false),
  Property('Ice.Admin.MessageSizeMax', false),
  Property('Ice.Admin.DelayCreation', false),
  Property('Ice.Admin.Enabled', false),
  Property('Ice.Admin.Facets', false),
  Property('Ice.Admin.InstanceName', false),
  Property('Ice.Admin.Logger.KeepLogs', false),
  Property('Ice.Admin.Logger.KeepTraces', false),
  Property('Ice.Admin.Logger.Properties', false),
  Property('Ice.Admin.ServerId', false),
  Property('Ice.BackgroundLocatorCacheUpdates', false),
  Property('Ice.BatchAutoFlush', true),
  Property('Ice.BatchAutoFlushSize', false),
  Property('Ice.ChangeUser', false),
  Property('Ice.ClassGraphDepthMax', false),
  Property('Ice.ClientAccessPolicyProtocol', false),
  Property('Ice.Compression.Level', false),
  Property('Ice.CollectObjects', false),
  Property('Ice.Config', false),
  Property('Ice.ConsoleListener', false),
  Property('Ice.Default.CollocationOptimized', false),
  Property('Ice.Default.EncodingVersion', false),
  Property('Ice.Default.EndpointSelection', false),
  Property('Ice.Default.Host', false),
  Property('Ice.Default.Locator.EndpointSelection', false),
  Property('Ice.Default.Locator.ConnectionCached', false),
  Property('Ice.Default.Locator.PreferSecure', false),
  Property('Ice.Default.Locator.LocatorCacheTimeout', false),
  Property('Ice.Default.Locator.InvocationTimeout', false),
  Property('Ice.Default.Locator.Locator', false),
  Property('Ice.Default.Locator.Router', false),
  Property('Ice.Default.Locator.CollocationOptimized', false),
  Property('Ice.Default.Locator.Context.*', false),
  Property('Ice.Default.Locator', false),
  Property('Ice.Default.LocatorCacheTimeout', false),
  Property('Ice.Default.InvocationTimeout', false),
  Property('Ice.Default.Package', false),
  Property('Ice.Default.PreferSecure', false),
  Property('Ice.Default.Protocol', false),
  Property('Ice.Default.Router.EndpointSelection', false),
  Property('Ice.Default.Router.ConnectionCached', false),
  Property('Ice.Default.Router.PreferSecure', false),
  Property('Ice.Default.Router.LocatorCacheTimeout', false),
  Property('Ice.Default.Router.InvocationTimeout', false),
  Property('Ice.Default.Router.Locator', false),
  Property('Ice.Default.Router.Router', false),
  Property('Ice.Default.Router.CollocationOptimized', false),
  Property('Ice.Default.Router.Context.*', false),
  Property('Ice.Default.Router', false),
  Property('Ice.Default.SlicedFormat', false),
  Property('Ice.Default.SourceAddress', false),
  Property('Ice.Default.Timeout', false),
  Property('Ice.EventLog.Source', false),
  Property('Ice.FactoryAssemblies', false),
  Property('Ice.HTTPProxyHost', false),
  Property('Ice.HTTPProxyPort', false),
  Property('Ice.ImplicitContext', false),
  Property('Ice.InitPlugins', false),
  Property('Ice.IPv4', false),
  Property('Ice.IPv6', false),
  Property('Ice.LogFile', false),
  Property('Ice.LogFile.SizeMax', false),
  Property('Ice.LogStdErr.Convert', false),
  Property('Ice.MessageSizeMax', false),
  Property('Ice.Nohup', false),
  Property('Ice.NullHandleAbort', false),
  Property('Ice.Override.CloseTimeout', false),
  Property('Ice.Override.Compress', false),
  Property('Ice.Override.ConnectTimeout', false),
  Property('Ice.Override.Timeout', false),
  Property('Ice.Override.Secure', false),
  Property('Ice.Package.*', false),
  Property('Ice.Plugin.*', false),
  Property('Ice.PluginLoadOrder', false),
  Property('Ice.PreferIPv6Address', false),
  Property('Ice.PreloadAssemblies', false),
  Property('Ice.PrintAdapterReady', false),
  Property('Ice.PrintProcessId', false),
  Property('Ice.PrintStackTraces', false),
  Property('Ice.ProgramName', false),
  Property('Ice.RetryIntervals', false),
  Property('Ice.ServerIdleTime', false),
  Property('Ice.SOCKSProxyHost', false),
  Property('Ice.SOCKSProxyPort', false),
  Property('Ice.StdErr', false),
  Property('Ice.StdOut', false),
  Property('Ice.SyslogFacility', false),
  Property('Ice.ThreadPool.Client.Size', false),
  Property('Ice.ThreadPool.Client.SizeMax', false),
  Property('Ice.ThreadPool.Client.SizeWarn', false),
  Property('Ice.ThreadPool.Client.StackSize', false),
  Property('Ice.ThreadPool.Client.Serialize', false),
  Property('Ice.ThreadPool.Client.ThreadIdleTime', false),
  Property('Ice.ThreadPool.Client.ThreadPriority', false),
  Property('Ice.ThreadPool.Server.Size', false),
  Property('Ice.ThreadPool.Server.SizeMax', false),
  Property('Ice.ThreadPool.Server.SizeWarn', false),
  Property('Ice.ThreadPool.Server.StackSize', false),
  Property('Ice.ThreadPool.Server.Serialize', false),
  Property('Ice.ThreadPool.Server.ThreadIdleTime', false),
  Property('Ice.ThreadPool.Server.ThreadPriority', false),
  Property('Ice.ThreadPriority', false),
  Property('Ice.ToStringMode', false),
  Property('Ice.Trace.Admin.Properties', false),
  Property('Ice.Trace.Admin.Logger', false),
  Property('Ice.Trace.Locator', false),
  Property('Ice.Trace.Network', false),
  Property('Ice.Trace.Protocol', false),
  Property('Ice.Trace.Retry', false),
  Property('Ice.Trace.Slicing', false),
  Property('Ice.Trace.ThreadPool', false),
  Property('Ice.UDP.RcvSize', false),
  Property('Ice.UDP.SndSize', false),
  Property('Ice.TCP.Backlog', false),
  Property('Ice.TCP.RcvSize', false),
  Property('Ice.TCP.SndSize', false),
  Property('Ice.UseApplicationClassLoader', false),
  Property('Ice.UseOSLog', false),
  Property('Ice.UseSyslog', false),
  Property('Ice.UseSystemdJournal', false),
  Property('Ice.Warn.AMICallback', false),
  Property('Ice.Warn.Connections', false),
  Property('Ice.Warn.Datagrams', false),
  Property('Ice.Warn.Dispatch', false),
  Property('Ice.Warn.Endpoints', false),
  Property('Ice.Warn.UnknownProperties', false),
  Property('Ice.Warn.UnusedProperties', false),
  Property('Ice.CacheMessageBuffers', false),
  Property('Ice.ThreadInterruptSafe', false),
];

const IceMXPropsData = [
  Property('IceMX.Metrics.*.GroupBy', false),
  Property('IceMX.Metrics.*.Map', false),
  Property('IceMX.Metrics.*.RetainDetached', false),
  Property('IceMX.Metrics.*.Accept', false),
  Property('IceMX.Metrics.*.Reject', false),
  Property('IceMX.Metrics.*', false),
];

const IceDiscoveryPropsData = [
  Property('IceDiscovery.Multicast.ACM.Timeout', false),
  Property('IceDiscovery.Multicast.ACM.Heartbeat', false),
  Property('IceDiscovery.Multicast.ACM.Close', false),
  Property('IceDiscovery.Multicast.ACM', false),
  Property('IceDiscovery.Multicast.AdapterId', false),
  Property('IceDiscovery.Multicast.Endpoints', false),
  Property('IceDiscovery.Multicast.Locator.EndpointSelection', false),
  Property('IceDiscovery.Multicast.Locator.ConnectionCached', false),
  Property('IceDiscovery.Multicast.Locator.PreferSecure', false),
  Property('IceDiscovery.Multicast.Locator.LocatorCacheTimeout', false),
  Property('IceDiscovery.Multicast.Locator.InvocationTimeout', false),
  Property('IceDiscovery.Multicast.Locator.Locator', false),
  Property('IceDiscovery.Multicast.Locator.Router', false),
  Property('IceDiscovery.Multicast.Locator.CollocationOptimized', false),
  Property('IceDiscovery.Multicast.Locator.Context.*', false),
  Property('IceDiscovery.Multicast.Locator', false),
  Property('IceDiscovery.Multicast.PublishedEndpoints', false),
  Property('IceDiscovery.Multicast.ReplicaGroupId', false),
  Property('IceDiscovery.Multicast.Router.EndpointSelection', false),
  Property('IceDiscovery.Multicast.Router.ConnectionCached', false),
  Property('IceDiscovery.Multicast.Router.PreferSecure', false),
  Property('IceDiscovery.Multicast.Router.LocatorCacheTimeout', false),
  Property('IceDiscovery.Multicast.Router.InvocationTimeout', false),
  Property('IceDiscovery.Multicast.Router.Locator', false),
  Property('IceDiscovery.Multicast.Router.Router', false),
  Property('IceDiscovery.Multicast.Router.CollocationOptimized', false),
  Property('IceDiscovery.Multicast.Router.Context.*', false),
  Property('IceDiscovery.Multicast.Router', false),
  Property('IceDiscovery.Multicast.ProxyOptions', false),
  Property('IceDiscovery.Multicast.ThreadPool.Size', false),
  Property('IceDiscovery.Multicast.ThreadPool.SizeMax', false),
  Property('IceDiscovery.Multicast.ThreadPool.SizeWarn', false),
  Property('IceDiscovery.Multicast.ThreadPool.StackSize', false),
  Property('IceDiscovery.Multicast.ThreadPool.Serialize', false),
  Property('IceDiscovery.Multicast.ThreadPool.ThreadIdleTime', false),
  Property('IceDiscovery.Multicast.ThreadPool.ThreadPriority', false),
  Property('IceDiscovery.Multicast.MessageSizeMax', false),
  Property('IceDiscovery.Reply.ACM.Timeout', false),
  Property('IceDiscovery.Reply.ACM.Heartbeat', false),
  Property('IceDiscovery.Reply.ACM.Close', false),
  Property('IceDiscovery.Reply.ACM', false),
  Property('IceDiscovery.Reply.AdapterId', false),
  Property('IceDiscovery.Reply.Endpoints', false),
  Property('IceDiscovery.Reply.Locator.EndpointSelection', false),
  Property('IceDiscovery.Reply.Locator.ConnectionCached', false),
  Property('IceDiscovery.Reply.Locator.PreferSecure', false),
  Property('IceDiscovery.Reply.Locator.LocatorCacheTimeout', false),
  Property('IceDiscovery.Reply.Locator.InvocationTimeout', false),
  Property('IceDiscovery.Reply.Locator.Locator', false),
  Property('IceDiscovery.Reply.Locator.Router', false),
  Property('IceDiscovery.Reply.Locator.CollocationOptimized', false),
  Property('IceDiscovery.Reply.Locator.Context.*', false),
  Property('IceDiscovery.Reply.Locator', false),
  Property('IceDiscovery.Reply.PublishedEndpoints', false),
  Property('IceDiscovery.Reply.ReplicaGroupId', false),
  Property('IceDiscovery.Reply.Router.EndpointSelection', false),
  Property('IceDiscovery.Reply.Router.ConnectionCached', false),
  Property('IceDiscovery.Reply.Router.PreferSecure', false),
  Property('IceDiscovery.Reply.Router.LocatorCacheTimeout', false),
  Property('IceDiscovery.Reply.Router.InvocationTimeout', false),
  Property('IceDiscovery.Reply.Router.Locator', false),
  Property('IceDiscovery.Reply.Router.Router', false),
  Property('IceDiscovery.Reply.Router.CollocationOptimized', false),
  Property('IceDiscovery.Reply.Router.Context.*', false),
  Property('IceDiscovery.Reply.Router', false),
  Property('IceDiscovery.Reply.ProxyOptions', false),
  Property('IceDiscovery.Reply.ThreadPool.Size', false),
  Property('IceDiscovery.Reply.ThreadPool.SizeMax', false),
  Property('IceDiscovery.Reply.ThreadPool.SizeWarn', false),
  Property('IceDiscovery.Reply.ThreadPool.StackSize', false),
  Property('IceDiscovery.Reply.ThreadPool.Serialize', false),
  Property('IceDiscovery.Reply.ThreadPool.ThreadIdleTime', false),
  Property('IceDiscovery.Reply.ThreadPool.ThreadPriority', false),
  Property('IceDiscovery.Reply.MessageSizeMax', false),
  Property('IceDiscovery.Locator.ACM.Timeout', false),
  Property('IceDiscovery.Locator.ACM.Heartbeat', false),
  Property('IceDiscovery.Locator.ACM.Close', false),
  Property('IceDiscovery.Locator.ACM', false),
  Property('IceDiscovery.Locator.AdapterId', false),
  Property('IceDiscovery.Locator.Endpoints', false),
  Property('IceDiscovery.Locator.Locator.EndpointSelection', false),
  Property('IceDiscovery.Locator.Locator.ConnectionCached', false),
  Property('IceDiscovery.Locator.Locator.PreferSecure', false),
  Property('IceDiscovery.Locator.Locator.LocatorCacheTimeout', false),
  Property('IceDiscovery.Locator.Locator.InvocationTimeout', false),
  Property('IceDiscovery.Locator.Locator.Locator', false),
  Property('IceDiscovery.Locator.Locator.Router', false),
  Property('IceDiscovery.Locator.Locator.CollocationOptimized', false),
  Property('IceDiscovery.Locator.Locator.Context.*', false),
  Property('IceDiscovery.Locator.Locator', false),
  Property('IceDiscovery.Locator.PublishedEndpoints', false),
  Property('IceDiscovery.Locator.ReplicaGroupId', false),
  Property('IceDiscovery.Locator.Router.EndpointSelection', false),
  Property('IceDiscovery.Locator.Router.ConnectionCached', false),
  Property('IceDiscovery.Locator.Router.PreferSecure', false),
  Property('IceDiscovery.Locator.Router.LocatorCacheTimeout', false),
  Property('IceDiscovery.Locator.Router.InvocationTimeout', false),
  Property('IceDiscovery.Locator.Router.Locator', false),
  Property('IceDiscovery.Locator.Router.Router', false),
  Property('IceDiscovery.Locator.Router.CollocationOptimized', false),
  Property('IceDiscovery.Locator.Router.Context.*', false),
  Property('IceDiscovery.Locator.Router', false),
  Property('IceDiscovery.Locator.ProxyOptions', false),
  Property('IceDiscovery.Locator.ThreadPool.Size', false),
  Property('IceDiscovery.Locator.ThreadPool.SizeMax', false),
  Property('IceDiscovery.Locator.ThreadPool.SizeWarn', false),
  Property('IceDiscovery.Locator.ThreadPool.StackSize', false),
  Property('IceDiscovery.Locator.ThreadPool.Serialize', false),
  Property('IceDiscovery.Locator.ThreadPool.ThreadIdleTime', false),
  Property('IceDiscovery.Locator.ThreadPool.ThreadPriority', false),
  Property('IceDiscovery.Locator.MessageSizeMax', false),
  Property('IceDiscovery.Lookup', false),
  Property('IceDiscovery.Timeout', false),
  Property('IceDiscovery.RetryCount', false),
  Property('IceDiscovery.LatencyMultiplier', false),
  Property('IceDiscovery.Address', false),
  Property('IceDiscovery.Port', false),
  Property('IceDiscovery.Interface', false),
  Property('IceDiscovery.DomainId', false),
];

const IceLocatorDiscoveryPropsData = [
  Property('IceLocatorDiscovery.Reply.ACM.Timeout', false),
  Property('IceLocatorDiscovery.Reply.ACM.Heartbeat', false),
  Property('IceLocatorDiscovery.Reply.ACM.Close', false),
  Property('IceLocatorDiscovery.Reply.ACM', false),
  Property('IceLocatorDiscovery.Reply.AdapterId', false),
  Property('IceLocatorDiscovery.Reply.Endpoints', false),
  Property('IceLocatorDiscovery.Reply.Locator.EndpointSelection', false),
  Property('IceLocatorDiscovery.Reply.Locator.ConnectionCached', false),
  Property('IceLocatorDiscovery.Reply.Locator.PreferSecure', false),
  Property('IceLocatorDiscovery.Reply.Locator.LocatorCacheTimeout', false),
  Property('IceLocatorDiscovery.Reply.Locator.InvocationTimeout', false),
  Property('IceLocatorDiscovery.Reply.Locator.Locator', false),
  Property('IceLocatorDiscovery.Reply.Locator.Router', false),
  Property('IceLocatorDiscovery.Reply.Locator.CollocationOptimized', false),
  Property('IceLocatorDiscovery.Reply.Locator.Context.*', false),
  Property('IceLocatorDiscovery.Reply.Locator', false),
  Property('IceLocatorDiscovery.Reply.PublishedEndpoints', false),
  Property('IceLocatorDiscovery.Reply.ReplicaGroupId', false),
  Property('IceLocatorDiscovery.Reply.Router.EndpointSelection', false),
  Property('IceLocatorDiscovery.Reply.Router.ConnectionCached', false),
  Property('IceLocatorDiscovery.Reply.Router.PreferSecure', false),
  Property('IceLocatorDiscovery.Reply.Router.LocatorCacheTimeout', false),
  Property('IceLocatorDiscovery.Reply.Router.InvocationTimeout', false),
  Property('IceLocatorDiscovery.Reply.Router.Locator', false),
  Property('IceLocatorDiscovery.Reply.Router.Router', false),
  Property('IceLocatorDiscovery.Reply.Router.CollocationOptimized', false),
  Property('IceLocatorDiscovery.Reply.Router.Context.*', false),
  Property('IceLocatorDiscovery.Reply.Router', false),
  Property('IceLocatorDiscovery.Reply.ProxyOptions', false),
  Property('IceLocatorDiscovery.Reply.ThreadPool.Size', false),
  Property('IceLocatorDiscovery.Reply.ThreadPool.SizeMax', false),
  Property('IceLocatorDiscovery.Reply.ThreadPool.SizeWarn', false),
  Property('IceLocatorDiscovery.Reply.ThreadPool.StackSize', false),
  Property('IceLocatorDiscovery.Reply.ThreadPool.Serialize', false),
  Property('IceLocatorDiscovery.Reply.ThreadPool.ThreadIdleTime', false),
  Property('IceLocatorDiscovery.Reply.ThreadPool.ThreadPriority', false),
  Property('IceLocatorDiscovery.Reply.MessageSizeMax', false),
  Property('IceLocatorDiscovery.Locator.ACM.Timeout', false),
  Property('IceLocatorDiscovery.Locator.ACM.Heartbeat', false),
  Property('IceLocatorDiscovery.Locator.ACM.Close', false),
  Property('IceLocatorDiscovery.Locator.ACM', false),
  Property('IceLocatorDiscovery.Locator.AdapterId', false),
  Property('IceLocatorDiscovery.Locator.Endpoints', false),
  Property('IceLocatorDiscovery.Locator.Locator.EndpointSelection', false),
  Property('IceLocatorDiscovery.Locator.Locator.ConnectionCached', false),
  Property('IceLocatorDiscovery.Locator.Locator.PreferSecure', false),
  Property('IceLocatorDiscovery.Locator.Locator.LocatorCacheTimeout', false),
  Property('IceLocatorDiscovery.Locator.Locator.InvocationTimeout', false),
  Property('IceLocatorDiscovery.Locator.Locator.Locator', false),
  Property('IceLocatorDiscovery.Locator.Locator.Router', false),
  Property('IceLocatorDiscovery.Locator.Locator.CollocationOptimized', false),
  Property('IceLocatorDiscovery.Locator.Locator.Context.*', false),
  Property('IceLocatorDiscovery.Locator.Locator', false),
  Property('IceLocatorDiscovery.Locator.PublishedEndpoints', false),
  Property('IceLocatorDiscovery.Locator.ReplicaGroupId', false),
  Property('IceLocatorDiscovery.Locator.Router.EndpointSelection', false),
  Property('IceLocatorDiscovery.Locator.Router.ConnectionCached', false),
  Property('IceLocatorDiscovery.Locator.Router.PreferSecure', false),
  Property('IceLocatorDiscovery.Locator.Router.LocatorCacheTimeout', false),
  Property('IceLocatorDiscovery.Locator.Router.InvocationTimeout', false),
  Property('IceLocatorDiscovery.Locator.Router.Locator', false),
  Property('IceLocatorDiscovery.Locator.Router.Router', false),
  Property('IceLocatorDiscovery.Locator.Router.CollocationOptimized', false),
  Property('IceLocatorDiscovery.Locator.Router.Context.*', false),
  Property('IceLocatorDiscovery.Locator.Router', false),
  Property('IceLocatorDiscovery.Locator.ProxyOptions', false),
  Property('IceLocatorDiscovery.Locator.ThreadPool.Size', false),
  Property('IceLocatorDiscovery.Locator.ThreadPool.SizeMax', false),
  Property('IceLocatorDiscovery.Locator.ThreadPool.SizeWarn', false),
  Property('IceLocatorDiscovery.Locator.ThreadPool.StackSize', false),
  Property('IceLocatorDiscovery.Locator.ThreadPool.Serialize', false),
  Property('IceLocatorDiscovery.Locator.ThreadPool.ThreadIdleTime', false),
  Property('IceLocatorDiscovery.Locator.ThreadPool.ThreadPriority', false),
  Property('IceLocatorDiscovery.Locator.MessageSizeMax', false),
  Property('IceLocatorDiscovery.Lookup', false),
  Property('IceLocatorDiscovery.Timeout', false),
  Property('IceLocatorDiscovery.RetryCount', false),
  Property('IceLocatorDiscovery.RetryDelay', false),
  Property('IceLocatorDiscovery.Address', false),
  Property('IceLocatorDiscovery.Port', false),
  Property('IceLocatorDiscovery.Interface', false),
  Property('IceLocatorDiscovery.InstanceName', false),
  Property('IceLocatorDiscovery.Trace.Lookup', false),
];

const IceBoxPropsData = [
  Property('IceBox.InheritProperties', false),
  Property('IceBox.InstanceName', true),
  Property('IceBox.LoadOrder', false),
  Property('IceBox.PrintServicesReady', false),
  Property('IceBox.Service.*', false),
  Property('IceBox.ServiceManager.AdapterId', true),
  Property('IceBox.ServiceManager.Endpoints', true),
  Property('IceBox.ServiceManager.Locator', true),
  Property('IceBox.ServiceManager.PublishedEndpoints', true),
  Property('IceBox.ServiceManager.ReplicaGroupId', true),
  Property('IceBox.ServiceManager.Router', true),
  Property('IceBox.ServiceManager.ThreadPool.Size', true),
  Property('IceBox.ServiceManager.ThreadPool.SizeMax', true),
  Property('IceBox.ServiceManager.ThreadPool.SizeWarn', true),
  Property('IceBox.ServiceManager.ThreadPool.StackSize', true),
  Property('IceBox.Trace.ServiceObserver', false),
  Property('IceBox.UseSharedCommunicator.*', false),
];

const IceBoxAdminPropsData = [
  Property('IceBoxAdmin.ServiceManager.Proxy.EndpointSelection', false),
  Property('IceBoxAdmin.ServiceManager.Proxy.ConnectionCached', false),
  Property('IceBoxAdmin.ServiceManager.Proxy.PreferSecure', false),
  Property('IceBoxAdmin.ServiceManager.Proxy.LocatorCacheTimeout', false),
  Property('IceBoxAdmin.ServiceManager.Proxy.InvocationTimeout', false),
  Property('IceBoxAdmin.ServiceManager.Proxy.Locator', false),
  Property('IceBoxAdmin.ServiceManager.Proxy.Router', false),
  Property('IceBoxAdmin.ServiceManager.Proxy.CollocationOptimized', false),
  Property('IceBoxAdmin.ServiceManager.Proxy.Context.*', false),
  Property('IceBoxAdmin.ServiceManager.Proxy', false),
];

const IceBridgePropsData = [
  Property('IceBridge.Source.ACM.Timeout', false),
  Property('IceBridge.Source.ACM.Heartbeat', false),
  Property('IceBridge.Source.ACM.Close', false),
  Property('IceBridge.Source.ACM', false),
  Property('IceBridge.Source.AdapterId', false),
  Property('IceBridge.Source.Endpoints', false),
  Property('IceBridge.Source.Locator.EndpointSelection', false),
  Property('IceBridge.Source.Locator.ConnectionCached', false),
  Property('IceBridge.Source.Locator.PreferSecure', false),
  Property('IceBridge.Source.Locator.LocatorCacheTimeout', false),
  Property('IceBridge.Source.Locator.InvocationTimeout', false),
  Property('IceBridge.Source.Locator.Locator', false),
  Property('IceBridge.Source.Locator.Router', false),
  Property('IceBridge.Source.Locator.CollocationOptimized', false),
  Property('IceBridge.Source.Locator.Context.*', false),
  Property('IceBridge.Source.Locator', false),
  Property('IceBridge.Source.PublishedEndpoints', false),
  Property('IceBridge.Source.ReplicaGroupId', false),
  Property('IceBridge.Source.Router.EndpointSelection', false),
  Property('IceBridge.Source.Router.ConnectionCached', false),
  Property('IceBridge.Source.Router.PreferSecure', false),
  Property('IceBridge.Source.Router.LocatorCacheTimeout', false),
  Property('IceBridge.Source.Router.InvocationTimeout', false),
  Property('IceBridge.Source.Router.Locator', false),
  Property('IceBridge.Source.Router.Router', false),
  Property('IceBridge.Source.Router.CollocationOptimized', false),
  Property('IceBridge.Source.Router.Context.*', false),
  Property('IceBridge.Source.Router', false),
  Property('IceBridge.Source.ProxyOptions', false),
  Property('IceBridge.Source.ThreadPool.Size', false),
  Property('IceBridge.Source.ThreadPool.SizeMax', false),
  Property('IceBridge.Source.ThreadPool.SizeWarn', false),
  Property('IceBridge.Source.ThreadPool.StackSize', false),
  Property('IceBridge.Source.ThreadPool.Serialize', false),
  Property('IceBridge.Source.ThreadPool.ThreadIdleTime', false),
  Property('IceBridge.Source.ThreadPool.ThreadPriority', false),
  Property('IceBridge.Source.MessageSizeMax', false),
  Property('IceBridge.Target.Endpoints', false),
  Property('IceBridge.InstanceName', false),
];

const IceGridAdminPropsData = [
  Property('IceGridAdmin.AuthenticateUsingSSL', false),
  Property('IceGridAdmin.MetricsConfig', false),
  Property('IceGridAdmin.Username', false),
  Property('IceGridAdmin.Password', false),
  Property('IceGridAdmin.Replica', false),
  Property('IceGridAdmin.Host', false),
  Property('IceGridAdmin.Port', false),
  Property('IceGridAdmin.InstanceName', false),
  Property('IceGridAdmin.Server.ACM.Timeout', false),
  Property('IceGridAdmin.Server.ACM.Heartbeat', false),
  Property('IceGridAdmin.Server.ACM.Close', false),
  Property('IceGridAdmin.Server.ACM', false),
  Property('IceGridAdmin.Server.AdapterId', false),
  Property('IceGridAdmin.Server.Endpoints', false),
  Property('IceGridAdmin.Server.Locator.EndpointSelection', false),
  Property('IceGridAdmin.Server.Locator.ConnectionCached', false),
  Property('IceGridAdmin.Server.Locator.PreferSecure', false),
  Property('IceGridAdmin.Server.Locator.LocatorCacheTimeout', false),
  Property('IceGridAdmin.Server.Locator.InvocationTimeout', false),
  Property('IceGridAdmin.Server.Locator.Locator', false),
  Property('IceGridAdmin.Server.Locator.Router', false),
  Property('IceGridAdmin.Server.Locator.CollocationOptimized', false),
  Property('IceGridAdmin.Server.Locator.Context.*', false),
  Property('IceGridAdmin.Server.Locator', false),
  Property('IceGridAdmin.Server.PublishedEndpoints', false),
  Property('IceGridAdmin.Server.ReplicaGroupId', false),
  Property('IceGridAdmin.Server.Router.EndpointSelection', false),
  Property('IceGridAdmin.Server.Router.ConnectionCached', false),
  Property('IceGridAdmin.Server.Router.PreferSecure', false),
  Property('IceGridAdmin.Server.Router.LocatorCacheTimeout', false),
  Property('IceGridAdmin.Server.Router.InvocationTimeout', false),
  Property('IceGridAdmin.Server.Router.Locator', false),
  Property('IceGridAdmin.Server.Router.Router', false),
  Property('IceGridAdmin.Server.Router.CollocationOptimized', false),
  Property('IceGridAdmin.Server.Router.Context.*', false),
  Property('IceGridAdmin.Server.Router', false),
  Property('IceGridAdmin.Server.ProxyOptions', false),
  Property('IceGridAdmin.Server.ThreadPool.Size', false),
  Property('IceGridAdmin.Server.ThreadPool.SizeMax', false),
  Property('IceGridAdmin.Server.ThreadPool.SizeWarn', false),
  Property('IceGridAdmin.Server.ThreadPool.StackSize', false),
  Property('IceGridAdmin.Server.ThreadPool.Serialize', false),
  Property('IceGridAdmin.Server.ThreadPool.ThreadIdleTime', false),
  Property('IceGridAdmin.Server.ThreadPool.ThreadPriority', false),
  Property('IceGridAdmin.Server.MessageSizeMax', false),
  Property('IceGridAdmin.Discovery.Address', false),
  Property('IceGridAdmin.Discovery.Interface', false),
  Property('IceGridAdmin.Discovery.Lookup', false),
  Property('IceGridAdmin.Discovery.Reply.ACM.Timeout', false),
  Property('IceGridAdmin.Discovery.Reply.ACM.Heartbeat', false),
  Property('IceGridAdmin.Discovery.Reply.ACM.Close', false),
  Property('IceGridAdmin.Discovery.Reply.ACM', false),
  Property('IceGridAdmin.Discovery.Reply.AdapterId', false),
  Property('IceGridAdmin.Discovery.Reply.Endpoints', false),
  Property('IceGridAdmin.Discovery.Reply.Locator.EndpointSelection', false),
  Property('IceGridAdmin.Discovery.Reply.Locator.ConnectionCached', false),
  Property('IceGridAdmin.Discovery.Reply.Locator.PreferSecure', false),
  Property('IceGridAdmin.Discovery.Reply.Locator.LocatorCacheTimeout', false),
  Property('IceGridAdmin.Discovery.Reply.Locator.InvocationTimeout', false),
  Property('IceGridAdmin.Discovery.Reply.Locator.Locator', false),
  Property('IceGridAdmin.Discovery.Reply.Locator.Router', false),
  Property('IceGridAdmin.Discovery.Reply.Locator.CollocationOptimized', false),
  Property('IceGridAdmin.Discovery.Reply.Locator.Context.*', false),
  Property('IceGridAdmin.Discovery.Reply.Locator', false),
  Property('IceGridAdmin.Discovery.Reply.PublishedEndpoints', false),
  Property('IceGridAdmin.Discovery.Reply.ReplicaGroupId', false),
  Property('IceGridAdmin.Discovery.Reply.Router.EndpointSelection', false),
  Property('IceGridAdmin.Discovery.Reply.Router.ConnectionCached', false),
  Property('IceGridAdmin.Discovery.Reply.Router.PreferSecure', false),
  Property('IceGridAdmin.Discovery.Reply.Router.LocatorCacheTimeout', false),
  Property('IceGridAdmin.Discovery.Reply.Router.InvocationTimeout', false),
  Property('IceGridAdmin.Discovery.Reply.Router.Locator', false),
  Property('IceGridAdmin.Discovery.Reply.Router.Router', false),
  Property('IceGridAdmin.Discovery.Reply.Router.CollocationOptimized', false),
  Property('IceGridAdmin.Discovery.Reply.Router.Context.*', false),
  Property('IceGridAdmin.Discovery.Reply.Router', false),
  Property('IceGridAdmin.Discovery.Reply.ProxyOptions', false),
  Property('IceGridAdmin.Discovery.Reply.ThreadPool.Size', false),
  Property('IceGridAdmin.Discovery.Reply.ThreadPool.SizeMax', false),
  Property('IceGridAdmin.Discovery.Reply.ThreadPool.SizeWarn', false),
  Property('IceGridAdmin.Discovery.Reply.ThreadPool.StackSize', false),
  Property('IceGridAdmin.Discovery.Reply.ThreadPool.Serialize', false),
  Property('IceGridAdmin.Discovery.Reply.ThreadPool.ThreadIdleTime', false),
  Property('IceGridAdmin.Discovery.Reply.ThreadPool.ThreadPriority', false),
  Property('IceGridAdmin.Discovery.Reply.MessageSizeMax', false),
  Property('IceGridAdmin.Discovery.Locator.ACM.Timeout', false),
  Property('IceGridAdmin.Discovery.Locator.ACM.Heartbeat', false),
  Property('IceGridAdmin.Discovery.Locator.ACM.Close', false),
  Property('IceGridAdmin.Discovery.Locator.ACM', false),
  Property('IceGridAdmin.Discovery.Locator.AdapterId', false),
  Property('IceGridAdmin.Discovery.Locator.Endpoints', false),
  Property('IceGridAdmin.Discovery.Locator.Locator.EndpointSelection', false),
  Property('IceGridAdmin.Discovery.Locator.Locator.ConnectionCached', false),
  Property('IceGridAdmin.Discovery.Locator.Locator.PreferSecure', false),
  Property('IceGridAdmin.Discovery.Locator.Locator.LocatorCacheTimeout', false),
  Property('IceGridAdmin.Discovery.Locator.Locator.InvocationTimeout', false),
  Property('IceGridAdmin.Discovery.Locator.Locator.Locator', false),
  Property('IceGridAdmin.Discovery.Locator.Locator.Router', false),
  Property(
      'IceGridAdmin.Discovery.Locator.Locator.CollocationOptimized', false),
  Property('IceGridAdmin.Discovery.Locator.Locator.Context.*', false),
  Property('IceGridAdmin.Discovery.Locator.Locator', false),
  Property('IceGridAdmin.Discovery.Locator.PublishedEndpoints', false),
  Property('IceGridAdmin.Discovery.Locator.ReplicaGroupId', false),
  Property('IceGridAdmin.Discovery.Locator.Router.EndpointSelection', false),
  Property('IceGridAdmin.Discovery.Locator.Router.ConnectionCached', false),
  Property('IceGridAdmin.Discovery.Locator.Router.PreferSecure', false),
  Property('IceGridAdmin.Discovery.Locator.Router.LocatorCacheTimeout', false),
  Property('IceGridAdmin.Discovery.Locator.Router.InvocationTimeout', false),
  Property('IceGridAdmin.Discovery.Locator.Router.Locator', false),
  Property('IceGridAdmin.Discovery.Locator.Router.Router', false),
  Property('IceGridAdmin.Discovery.Locator.Router.CollocationOptimized', false),
  Property('IceGridAdmin.Discovery.Locator.Router.Context.*', false),
  Property('IceGridAdmin.Discovery.Locator.Router', false),
  Property('IceGridAdmin.Discovery.Locator.ProxyOptions', false),
  Property('IceGridAdmin.Discovery.Locator.ThreadPool.Size', false),
  Property('IceGridAdmin.Discovery.Locator.ThreadPool.SizeMax', false),
  Property('IceGridAdmin.Discovery.Locator.ThreadPool.SizeWarn', false),
  Property('IceGridAdmin.Discovery.Locator.ThreadPool.StackSize', false),
  Property('IceGridAdmin.Discovery.Locator.ThreadPool.Serialize', false),
  Property('IceGridAdmin.Discovery.Locator.ThreadPool.ThreadIdleTime', false),
  Property('IceGridAdmin.Discovery.Locator.ThreadPool.ThreadPriority', false),
  Property('IceGridAdmin.Discovery.Locator.MessageSizeMax', false),
  Property('IceGridAdmin.Trace.Observers', false),
  Property('IceGridAdmin.Trace.SaveToRegistry', false),
];

const IceGridPropsData = [
  Property('IceGrid.AdminRouter.ACM.Timeout', false),
  Property('IceGrid.AdminRouter.ACM.Heartbeat', false),
  Property('IceGrid.AdminRouter.ACM.Close', false),
  Property('IceGrid.AdminRouter.ACM', false),
  Property('IceGrid.AdminRouter.AdapterId', false),
  Property('IceGrid.AdminRouter.Endpoints', false),
  Property('IceGrid.AdminRouter.Locator.EndpointSelection', false),
  Property('IceGrid.AdminRouter.Locator.ConnectionCached', false),
  Property('IceGrid.AdminRouter.Locator.PreferSecure', false),
  Property('IceGrid.AdminRouter.Locator.LocatorCacheTimeout', false),
  Property('IceGrid.AdminRouter.Locator.InvocationTimeout', false),
  Property('IceGrid.AdminRouter.Locator.Locator', false),
  Property('IceGrid.AdminRouter.Locator.Router', false),
  Property('IceGrid.AdminRouter.Locator.CollocationOptimized', false),
  Property('IceGrid.AdminRouter.Locator.Context.*', false),
  Property('IceGrid.AdminRouter.Locator', false),
  Property('IceGrid.AdminRouter.PublishedEndpoints', false),
  Property('IceGrid.AdminRouter.ReplicaGroupId', false),
  Property('IceGrid.AdminRouter.Router.EndpointSelection', false),
  Property('IceGrid.AdminRouter.Router.ConnectionCached', false),
  Property('IceGrid.AdminRouter.Router.PreferSecure', false),
  Property('IceGrid.AdminRouter.Router.LocatorCacheTimeout', false),
  Property('IceGrid.AdminRouter.Router.InvocationTimeout', false),
  Property('IceGrid.AdminRouter.Router.Locator', false),
  Property('IceGrid.AdminRouter.Router.Router', false),
  Property('IceGrid.AdminRouter.Router.CollocationOptimized', false),
  Property('IceGrid.AdminRouter.Router.Context.*', false),
  Property('IceGrid.AdminRouter.Router', false),
  Property('IceGrid.AdminRouter.ProxyOptions', false),
  Property('IceGrid.AdminRouter.ThreadPool.Size', false),
  Property('IceGrid.AdminRouter.ThreadPool.SizeMax', false),
  Property('IceGrid.AdminRouter.ThreadPool.SizeWarn', false),
  Property('IceGrid.AdminRouter.ThreadPool.StackSize', false),
  Property('IceGrid.AdminRouter.ThreadPool.Serialize', false),
  Property('IceGrid.AdminRouter.ThreadPool.ThreadIdleTime', false),
  Property('IceGrid.AdminRouter.ThreadPool.ThreadPriority', false),
  Property('IceGrid.AdminRouter.MessageSizeMax', false),
  Property('IceGrid.InstanceName', false),
  Property('IceGrid.Node.ACM.Timeout', false),
  Property('IceGrid.Node.ACM.Heartbeat', false),
  Property('IceGrid.Node.ACM.Close', false),
  Property('IceGrid.Node.ACM', false),
  Property('IceGrid.Node.AdapterId', false),
  Property('IceGrid.Node.Endpoints', false),
  Property('IceGrid.Node.Locator.EndpointSelection', false),
  Property('IceGrid.Node.Locator.ConnectionCached', false),
  Property('IceGrid.Node.Locator.PreferSecure', false),
  Property('IceGrid.Node.Locator.LocatorCacheTimeout', false),
  Property('IceGrid.Node.Locator.InvocationTimeout', false),
  Property('IceGrid.Node.Locator.Locator', false),
  Property('IceGrid.Node.Locator.Router', false),
  Property('IceGrid.Node.Locator.CollocationOptimized', false),
  Property('IceGrid.Node.Locator.Context.*', false),
  Property('IceGrid.Node.Locator', false),
  Property('IceGrid.Node.PublishedEndpoints', false),
  Property('IceGrid.Node.ReplicaGroupId', false),
  Property('IceGrid.Node.Router.EndpointSelection', false),
  Property('IceGrid.Node.Router.ConnectionCached', false),
  Property('IceGrid.Node.Router.PreferSecure', false),
  Property('IceGrid.Node.Router.LocatorCacheTimeout', false),
  Property('IceGrid.Node.Router.InvocationTimeout', false),
  Property('IceGrid.Node.Router.Locator', false),
  Property('IceGrid.Node.Router.Router', false),
  Property('IceGrid.Node.Router.CollocationOptimized', false),
  Property('IceGrid.Node.Router.Context.*', false),
  Property('IceGrid.Node.Router', false),
  Property('IceGrid.Node.ProxyOptions', false),
  Property('IceGrid.Node.ThreadPool.Size', false),
  Property('IceGrid.Node.ThreadPool.SizeMax', false),
  Property('IceGrid.Node.ThreadPool.SizeWarn', false),
  Property('IceGrid.Node.ThreadPool.StackSize', false),
  Property('IceGrid.Node.ThreadPool.Serialize', false),
  Property('IceGrid.Node.ThreadPool.ThreadIdleTime', false),
  Property('IceGrid.Node.ThreadPool.ThreadPriority', false),
  Property('IceGrid.Node.MessageSizeMax', false),
  Property('IceGrid.Node.AllowRunningServersAsRoot', false),
  Property('IceGrid.Node.AllowEndpointsOverride', false),
  Property('IceGrid.Node.CollocateRegistry', false),
  Property('IceGrid.Node.Data', false),
  Property('IceGrid.Node.DisableOnFailure', false),
  Property('IceGrid.Node.Name', false),
  Property('IceGrid.Node.Output', false),
  Property('IceGrid.Node.ProcessorSocketCount', false),
  Property('IceGrid.Node.PrintServersReady', false),
  Property('IceGrid.Node.PropertiesOverride', false),
  Property('IceGrid.Node.RedirectErrToOut', false),
  Property('IceGrid.Node.Trace.Activator', false),
  Property('IceGrid.Node.Trace.Adapter', false),
  Property('IceGrid.Node.Trace.Admin', false),
  Property('IceGrid.Node.Trace.Patch', false),
  Property('IceGrid.Node.Trace.Replica', false),
  Property('IceGrid.Node.Trace.Server', false),
  Property('IceGrid.Node.UserAccounts', false),
  Property('IceGrid.Node.UserAccountMapper.EndpointSelection', false),
  Property('IceGrid.Node.UserAccountMapper.ConnectionCached', false),
  Property('IceGrid.Node.UserAccountMapper.PreferSecure', false),
  Property('IceGrid.Node.UserAccountMapper.LocatorCacheTimeout', false),
  Property('IceGrid.Node.UserAccountMapper.InvocationTimeout', false),
  Property('IceGrid.Node.UserAccountMapper.Locator', false),
  Property('IceGrid.Node.UserAccountMapper.Router', false),
  Property('IceGrid.Node.UserAccountMapper.CollocationOptimized', false),
  Property('IceGrid.Node.UserAccountMapper.Context.*', false),
  Property('IceGrid.Node.UserAccountMapper', false),
  Property('IceGrid.Node.WaitTime', false),
  Property('IceGrid.Registry.AdminCryptPasswords', false),
  Property(
      'IceGrid.Registry.AdminPermissionsVerifier.EndpointSelection', false),
  Property('IceGrid.Registry.AdminPermissionsVerifier.ConnectionCached', false),
  Property('IceGrid.Registry.AdminPermissionsVerifier.PreferSecure', false),
  Property(
      'IceGrid.Registry.AdminPermissionsVerifier.LocatorCacheTimeout', false),
  Property(
      'IceGrid.Registry.AdminPermissionsVerifier.InvocationTimeout', false),
  Property('IceGrid.Registry.AdminPermissionsVerifier.Locator', false),
  Property('IceGrid.Registry.AdminPermissionsVerifier.Router', false),
  Property(
      'IceGrid.Registry.AdminPermissionsVerifier.CollocationOptimized', false),
  Property('IceGrid.Registry.AdminPermissionsVerifier.Context.*', false),
  Property('IceGrid.Registry.AdminPermissionsVerifier', false),
  Property('IceGrid.Registry.AdminSessionFilters', false),
  Property('IceGrid.Registry.AdminSessionManager.ACM.Timeout', false),
  Property('IceGrid.Registry.AdminSessionManager.ACM.Heartbeat', false),
  Property('IceGrid.Registry.AdminSessionManager.ACM.Close', false),
  Property('IceGrid.Registry.AdminSessionManager.ACM', false),
  Property('IceGrid.Registry.AdminSessionManager.AdapterId', false),
  Property('IceGrid.Registry.AdminSessionManager.Endpoints', false),
  Property(
      'IceGrid.Registry.AdminSessionManager.Locator.EndpointSelection', false),
  Property(
      'IceGrid.Registry.AdminSessionManager.Locator.ConnectionCached', false),
  Property('IceGrid.Registry.AdminSessionManager.Locator.PreferSecure', false),
  Property('IceGrid.Registry.AdminSessionManager.Locator.LocatorCacheTimeout',
      false),
  Property(
      'IceGrid.Registry.AdminSessionManager.Locator.InvocationTimeout', false),
  Property('IceGrid.Registry.AdminSessionManager.Locator.Locator', false),
  Property('IceGrid.Registry.AdminSessionManager.Locator.Router', false),
  Property('IceGrid.Registry.AdminSessionManager.Locator.CollocationOptimized',
      false),
  Property('IceGrid.Registry.AdminSessionManager.Locator.Context.*', false),
  Property('IceGrid.Registry.AdminSessionManager.Locator', false),
  Property('IceGrid.Registry.AdminSessionManager.PublishedEndpoints', false),
  Property('IceGrid.Registry.AdminSessionManager.ReplicaGroupId', false),
  Property(
      'IceGrid.Registry.AdminSessionManager.Router.EndpointSelection', false),
  Property(
      'IceGrid.Registry.AdminSessionManager.Router.ConnectionCached', false),
  Property('IceGrid.Registry.AdminSessionManager.Router.PreferSecure', false),
  Property(
      'IceGrid.Registry.AdminSessionManager.Router.LocatorCacheTimeout', false),
  Property(
      'IceGrid.Registry.AdminSessionManager.Router.InvocationTimeout', false),
  Property('IceGrid.Registry.AdminSessionManager.Router.Locator', false),
  Property('IceGrid.Registry.AdminSessionManager.Router.Router', false),
  Property('IceGrid.Registry.AdminSessionManager.Router.CollocationOptimized',
      false),
  Property('IceGrid.Registry.AdminSessionManager.Router.Context.*', false),
  Property('IceGrid.Registry.AdminSessionManager.Router', false),
  Property('IceGrid.Registry.AdminSessionManager.ProxyOptions', false),
  Property('IceGrid.Registry.AdminSessionManager.ThreadPool.Size', false),
  Property('IceGrid.Registry.AdminSessionManager.ThreadPool.SizeMax', false),
  Property('IceGrid.Registry.AdminSessionManager.ThreadPool.SizeWarn', false),
  Property('IceGrid.Registry.AdminSessionManager.ThreadPool.StackSize', false),
  Property('IceGrid.Registry.AdminSessionManager.ThreadPool.Serialize', false),
  Property(
      'IceGrid.Registry.AdminSessionManager.ThreadPool.ThreadIdleTime', false),
  Property(
      'IceGrid.Registry.AdminSessionManager.ThreadPool.ThreadPriority', false),
  Property('IceGrid.Registry.AdminSessionManager.MessageSizeMax', false),
  Property(
      'IceGrid.Registry.AdminSSLPermissionsVerifier.EndpointSelection', false),
  Property(
      'IceGrid.Registry.AdminSSLPermissionsVerifier.ConnectionCached', false),
  Property('IceGrid.Registry.AdminSSLPermissionsVerifier.PreferSecure', false),
  Property('IceGrid.Registry.AdminSSLPermissionsVerifier.LocatorCacheTimeout',
      false),
  Property(
      'IceGrid.Registry.AdminSSLPermissionsVerifier.InvocationTimeout', false),
  Property('IceGrid.Registry.AdminSSLPermissionsVerifier.Locator', false),
  Property('IceGrid.Registry.AdminSSLPermissionsVerifier.Router', false),
  Property('IceGrid.Registry.AdminSSLPermissionsVerifier.CollocationOptimized',
      false),
  Property('IceGrid.Registry.AdminSSLPermissionsVerifier.Context.*', false),
  Property('IceGrid.Registry.AdminSSLPermissionsVerifier', false),
  Property('IceGrid.Registry.Client.ACM.Timeout', false),
  Property('IceGrid.Registry.Client.ACM.Heartbeat', false),
  Property('IceGrid.Registry.Client.ACM.Close', false),
  Property('IceGrid.Registry.Client.ACM', false),
  Property('IceGrid.Registry.Client.AdapterId', false),
  Property('IceGrid.Registry.Client.Endpoints', false),
  Property('IceGrid.Registry.Client.Locator.EndpointSelection', false),
  Property('IceGrid.Registry.Client.Locator.ConnectionCached', false),
  Property('IceGrid.Registry.Client.Locator.PreferSecure', false),
  Property('IceGrid.Registry.Client.Locator.LocatorCacheTimeout', false),
  Property('IceGrid.Registry.Client.Locator.InvocationTimeout', false),
  Property('IceGrid.Registry.Client.Locator.Locator', false),
  Property('IceGrid.Registry.Client.Locator.Router', false),
  Property('IceGrid.Registry.Client.Locator.CollocationOptimized', false),
  Property('IceGrid.Registry.Client.Locator.Context.*', false),
  Property('IceGrid.Registry.Client.Locator', false),
  Property('IceGrid.Registry.Client.PublishedEndpoints', false),
  Property('IceGrid.Registry.Client.ReplicaGroupId', false),
  Property('IceGrid.Registry.Client.Router.EndpointSelection', false),
  Property('IceGrid.Registry.Client.Router.ConnectionCached', false),
  Property('IceGrid.Registry.Client.Router.PreferSecure', false),
  Property('IceGrid.Registry.Client.Router.LocatorCacheTimeout', false),
  Property('IceGrid.Registry.Client.Router.InvocationTimeout', false),
  Property('IceGrid.Registry.Client.Router.Locator', false),
  Property('IceGrid.Registry.Client.Router.Router', false),
  Property('IceGrid.Registry.Client.Router.CollocationOptimized', false),
  Property('IceGrid.Registry.Client.Router.Context.*', false),
  Property('IceGrid.Registry.Client.Router', false),
  Property('IceGrid.Registry.Client.ProxyOptions', false),
  Property('IceGrid.Registry.Client.ThreadPool.Size', false),
  Property('IceGrid.Registry.Client.ThreadPool.SizeMax', false),
  Property('IceGrid.Registry.Client.ThreadPool.SizeWarn', false),
  Property('IceGrid.Registry.Client.ThreadPool.StackSize', false),
  Property('IceGrid.Registry.Client.ThreadPool.Serialize', false),
  Property('IceGrid.Registry.Client.ThreadPool.ThreadIdleTime', false),
  Property('IceGrid.Registry.Client.ThreadPool.ThreadPriority', false),
  Property('IceGrid.Registry.Client.MessageSizeMax', false),
  Property('IceGrid.Registry.CryptPasswords', false),
  Property('IceGrid.Registry.DefaultTemplates', false),
  Property('IceGrid.Registry.Discovery.ACM.Timeout', false),
  Property('IceGrid.Registry.Discovery.ACM.Heartbeat', false),
  Property('IceGrid.Registry.Discovery.ACM.Close', false),
  Property('IceGrid.Registry.Discovery.ACM', false),
  Property('IceGrid.Registry.Discovery.AdapterId', false),
  Property('IceGrid.Registry.Discovery.Endpoints', false),
  Property('IceGrid.Registry.Discovery.Locator.EndpointSelection', false),
  Property('IceGrid.Registry.Discovery.Locator.ConnectionCached', false),
  Property('IceGrid.Registry.Discovery.Locator.PreferSecure', false),
  Property('IceGrid.Registry.Discovery.Locator.LocatorCacheTimeout', false),
  Property('IceGrid.Registry.Discovery.Locator.InvocationTimeout', false),
  Property('IceGrid.Registry.Discovery.Locator.Locator', false),
  Property('IceGrid.Registry.Discovery.Locator.Router', false),
  Property('IceGrid.Registry.Discovery.Locator.CollocationOptimized', false),
  Property('IceGrid.Registry.Discovery.Locator.Context.*', false),
  Property('IceGrid.Registry.Discovery.Locator', false),
  Property('IceGrid.Registry.Discovery.PublishedEndpoints', false),
  Property('IceGrid.Registry.Discovery.ReplicaGroupId', false),
  Property('IceGrid.Registry.Discovery.Router.EndpointSelection', false),
  Property('IceGrid.Registry.Discovery.Router.ConnectionCached', false),
  Property('IceGrid.Registry.Discovery.Router.PreferSecure', false),
  Property('IceGrid.Registry.Discovery.Router.LocatorCacheTimeout', false),
  Property('IceGrid.Registry.Discovery.Router.InvocationTimeout', false),
  Property('IceGrid.Registry.Discovery.Router.Locator', false),
  Property('IceGrid.Registry.Discovery.Router.Router', false),
  Property('IceGrid.Registry.Discovery.Router.CollocationOptimized', false),
  Property('IceGrid.Registry.Discovery.Router.Context.*', false),
  Property('IceGrid.Registry.Discovery.Router', false),
  Property('IceGrid.Registry.Discovery.ProxyOptions', false),
  Property('IceGrid.Registry.Discovery.ThreadPool.Size', false),
  Property('IceGrid.Registry.Discovery.ThreadPool.SizeMax', false),
  Property('IceGrid.Registry.Discovery.ThreadPool.SizeWarn', false),
  Property('IceGrid.Registry.Discovery.ThreadPool.StackSize', false),
  Property('IceGrid.Registry.Discovery.ThreadPool.Serialize', false),
  Property('IceGrid.Registry.Discovery.ThreadPool.ThreadIdleTime', false),
  Property('IceGrid.Registry.Discovery.ThreadPool.ThreadPriority', false),
  Property('IceGrid.Registry.Discovery.MessageSizeMax', false),
  Property('IceGrid.Registry.Discovery.Enabled', false),
  Property('IceGrid.Registry.Discovery.Address', false),
  Property('IceGrid.Registry.Discovery.Port', false),
  Property('IceGrid.Registry.Discovery.Interface', false),
  Property('IceGrid.Registry.DynamicRegistration', false),
  Property('IceGrid.Registry.Internal.ACM.Timeout', false),
  Property('IceGrid.Registry.Internal.ACM.Heartbeat', false),
  Property('IceGrid.Registry.Internal.ACM.Close', false),
  Property('IceGrid.Registry.Internal.ACM', false),
  Property('IceGrid.Registry.Internal.AdapterId', false),
  Property('IceGrid.Registry.Internal.Endpoints', false),
  Property('IceGrid.Registry.Internal.Locator.EndpointSelection', false),
  Property('IceGrid.Registry.Internal.Locator.ConnectionCached', false),
  Property('IceGrid.Registry.Internal.Locator.PreferSecure', false),
  Property('IceGrid.Registry.Internal.Locator.LocatorCacheTimeout', false),
  Property('IceGrid.Registry.Internal.Locator.InvocationTimeout', false),
  Property('IceGrid.Registry.Internal.Locator.Locator', false),
  Property('IceGrid.Registry.Internal.Locator.Router', false),
  Property('IceGrid.Registry.Internal.Locator.CollocationOptimized', false),
  Property('IceGrid.Registry.Internal.Locator.Context.*', false),
  Property('IceGrid.Registry.Internal.Locator', false),
  Property('IceGrid.Registry.Internal.PublishedEndpoints', false),
  Property('IceGrid.Registry.Internal.ReplicaGroupId', false),
  Property('IceGrid.Registry.Internal.Router.EndpointSelection', false),
  Property('IceGrid.Registry.Internal.Router.ConnectionCached', false),
  Property('IceGrid.Registry.Internal.Router.PreferSecure', false),
  Property('IceGrid.Registry.Internal.Router.LocatorCacheTimeout', false),
  Property('IceGrid.Registry.Internal.Router.InvocationTimeout', false),
  Property('IceGrid.Registry.Internal.Router.Locator', false),
  Property('IceGrid.Registry.Internal.Router.Router', false),
  Property('IceGrid.Registry.Internal.Router.CollocationOptimized', false),
  Property('IceGrid.Registry.Internal.Router.Context.*', false),
  Property('IceGrid.Registry.Internal.Router', false),
  Property('IceGrid.Registry.Internal.ProxyOptions', false),
  Property('IceGrid.Registry.Internal.ThreadPool.Size', false),
  Property('IceGrid.Registry.Internal.ThreadPool.SizeMax', false),
  Property('IceGrid.Registry.Internal.ThreadPool.SizeWarn', false),
  Property('IceGrid.Registry.Internal.ThreadPool.StackSize', false),
  Property('IceGrid.Registry.Internal.ThreadPool.Serialize', false),
  Property('IceGrid.Registry.Internal.ThreadPool.ThreadIdleTime', false),
  Property('IceGrid.Registry.Internal.ThreadPool.ThreadPriority', false),
  Property('IceGrid.Registry.Internal.MessageSizeMax', false),
  Property('IceGrid.Registry.LMDB.MapSize', false),
  Property('IceGrid.Registry.LMDB.Path', false),
  Property('IceGrid.Registry.NodeSessionTimeout', false),
  Property('IceGrid.Registry.PermissionsVerifier.EndpointSelection', false),
  Property('IceGrid.Registry.PermissionsVerifier.ConnectionCached', false),
  Property('IceGrid.Registry.PermissionsVerifier.PreferSecure', false),
  Property('IceGrid.Registry.PermissionsVerifier.LocatorCacheTimeout', false),
  Property('IceGrid.Registry.PermissionsVerifier.InvocationTimeout', false),
  Property('IceGrid.Registry.PermissionsVerifier.Locator', false),
  Property('IceGrid.Registry.PermissionsVerifier.Router', false),
  Property('IceGrid.Registry.PermissionsVerifier.CollocationOptimized', false),
  Property('IceGrid.Registry.PermissionsVerifier.Context.*', false),
  Property('IceGrid.Registry.PermissionsVerifier', false),
  Property('IceGrid.Registry.ReplicaName', false),
  Property('IceGrid.Registry.ReplicaSessionTimeout', false),
  Property('IceGrid.Registry.RequireNodeCertCN', false),
  Property('IceGrid.Registry.RequireReplicaCertCN', false),
  Property('IceGrid.Registry.Server.ACM.Timeout', false),
  Property('IceGrid.Registry.Server.ACM.Heartbeat', false),
  Property('IceGrid.Registry.Server.ACM.Close', false),
  Property('IceGrid.Registry.Server.ACM', false),
  Property('IceGrid.Registry.Server.AdapterId', false),
  Property('IceGrid.Registry.Server.Endpoints', false),
  Property('IceGrid.Registry.Server.Locator.EndpointSelection', false),
  Property('IceGrid.Registry.Server.Locator.ConnectionCached', false),
  Property('IceGrid.Registry.Server.Locator.PreferSecure', false),
  Property('IceGrid.Registry.Server.Locator.LocatorCacheTimeout', false),
  Property('IceGrid.Registry.Server.Locator.InvocationTimeout', false),
  Property('IceGrid.Registry.Server.Locator.Locator', false),
  Property('IceGrid.Registry.Server.Locator.Router', false),
  Property('IceGrid.Registry.Server.Locator.CollocationOptimized', false),
  Property('IceGrid.Registry.Server.Locator.Context.*', false),
  Property('IceGrid.Registry.Server.Locator', false),
  Property('IceGrid.Registry.Server.PublishedEndpoints', false),
  Property('IceGrid.Registry.Server.ReplicaGroupId', false),
  Property('IceGrid.Registry.Server.Router.EndpointSelection', false),
  Property('IceGrid.Registry.Server.Router.ConnectionCached', false),
  Property('IceGrid.Registry.Server.Router.PreferSecure', false),
  Property('IceGrid.Registry.Server.Router.LocatorCacheTimeout', false),
  Property('IceGrid.Registry.Server.Router.InvocationTimeout', false),
  Property('IceGrid.Registry.Server.Router.Locator', false),
  Property('IceGrid.Registry.Server.Router.Router', false),
  Property('IceGrid.Registry.Server.Router.CollocationOptimized', false),
  Property('IceGrid.Registry.Server.Router.Context.*', false),
  Property('IceGrid.Registry.Server.Router', false),
  Property('IceGrid.Registry.Server.ProxyOptions', false),
  Property('IceGrid.Registry.Server.ThreadPool.Size', false),
  Property('IceGrid.Registry.Server.ThreadPool.SizeMax', false),
  Property('IceGrid.Registry.Server.ThreadPool.SizeWarn', false),
  Property('IceGrid.Registry.Server.ThreadPool.StackSize', false),
  Property('IceGrid.Registry.Server.ThreadPool.Serialize', false),
  Property('IceGrid.Registry.Server.ThreadPool.ThreadIdleTime', false),
  Property('IceGrid.Registry.Server.ThreadPool.ThreadPriority', false),
  Property('IceGrid.Registry.Server.MessageSizeMax', false),
  Property('IceGrid.Registry.SessionFilters', false),
  Property('IceGrid.Registry.SessionManager.ACM.Timeout', false),
  Property('IceGrid.Registry.SessionManager.ACM.Heartbeat', false),
  Property('IceGrid.Registry.SessionManager.ACM.Close', false),
  Property('IceGrid.Registry.SessionManager.ACM', false),
  Property('IceGrid.Registry.SessionManager.AdapterId', false),
  Property('IceGrid.Registry.SessionManager.Endpoints', false),
  Property('IceGrid.Registry.SessionManager.Locator.EndpointSelection', false),
  Property('IceGrid.Registry.SessionManager.Locator.ConnectionCached', false),
  Property('IceGrid.Registry.SessionManager.Locator.PreferSecure', false),
  Property(
      'IceGrid.Registry.SessionManager.Locator.LocatorCacheTimeout', false),
  Property('IceGrid.Registry.SessionManager.Locator.InvocationTimeout', false),
  Property('IceGrid.Registry.SessionManager.Locator.Locator', false),
  Property('IceGrid.Registry.SessionManager.Locator.Router', false),
  Property(
      'IceGrid.Registry.SessionManager.Locator.CollocationOptimized', false),
  Property('IceGrid.Registry.SessionManager.Locator.Context.*', false),
  Property('IceGrid.Registry.SessionManager.Locator', false),
  Property('IceGrid.Registry.SessionManager.PublishedEndpoints', false),
  Property('IceGrid.Registry.SessionManager.ReplicaGroupId', false),
  Property('IceGrid.Registry.SessionManager.Router.EndpointSelection', false),
  Property('IceGrid.Registry.SessionManager.Router.ConnectionCached', false),
  Property('IceGrid.Registry.SessionManager.Router.PreferSecure', false),
  Property('IceGrid.Registry.SessionManager.Router.LocatorCacheTimeout', false),
  Property('IceGrid.Registry.SessionManager.Router.InvocationTimeout', false),
  Property('IceGrid.Registry.SessionManager.Router.Locator', false),
  Property('IceGrid.Registry.SessionManager.Router.Router', false),
  Property(
      'IceGrid.Registry.SessionManager.Router.CollocationOptimized', false),
  Property('IceGrid.Registry.SessionManager.Router.Context.*', false),
  Property('IceGrid.Registry.SessionManager.Router', false),
  Property('IceGrid.Registry.SessionManager.ProxyOptions', false),
  Property('IceGrid.Registry.SessionManager.ThreadPool.Size', false),
  Property('IceGrid.Registry.SessionManager.ThreadPool.SizeMax', false),
  Property('IceGrid.Registry.SessionManager.ThreadPool.SizeWarn', false),
  Property('IceGrid.Registry.SessionManager.ThreadPool.StackSize', false),
  Property('IceGrid.Registry.SessionManager.ThreadPool.Serialize', false),
  Property('IceGrid.Registry.SessionManager.ThreadPool.ThreadIdleTime', false),
  Property('IceGrid.Registry.SessionManager.ThreadPool.ThreadPriority', false),
  Property('IceGrid.Registry.SessionManager.MessageSizeMax', false),
  Property('IceGrid.Registry.SessionTimeout', false),
  Property('IceGrid.Registry.SSLPermissionsVerifier.EndpointSelection', false),
  Property('IceGrid.Registry.SSLPermissionsVerifier.ConnectionCached', false),
  Property('IceGrid.Registry.SSLPermissionsVerifier.PreferSecure', false),
  Property(
      'IceGrid.Registry.SSLPermissionsVerifier.LocatorCacheTimeout', false),
  Property('IceGrid.Registry.SSLPermissionsVerifier.InvocationTimeout', false),
  Property('IceGrid.Registry.SSLPermissionsVerifier.Locator', false),
  Property('IceGrid.Registry.SSLPermissionsVerifier.Router', false),
  Property(
      'IceGrid.Registry.SSLPermissionsVerifier.CollocationOptimized', false),
  Property('IceGrid.Registry.SSLPermissionsVerifier.Context.*', false),
  Property('IceGrid.Registry.SSLPermissionsVerifier', false),
  Property('IceGrid.Registry.Trace.Admin', false),
  Property('IceGrid.Registry.Trace.Application', false),
  Property('IceGrid.Registry.Trace.Adapter', false),
  Property('IceGrid.Registry.Trace.Discovery', false),
  Property('IceGrid.Registry.Trace.Locator', false),
  Property('IceGrid.Registry.Trace.Node', false),
  Property('IceGrid.Registry.Trace.Object', false),
  Property('IceGrid.Registry.Trace.Patch', false),
  Property('IceGrid.Registry.Trace.Replica', false),
  Property('IceGrid.Registry.Trace.Server', false),
  Property('IceGrid.Registry.Trace.Session', false),
  Property('IceGrid.Registry.Trace.Subscriber', false),
  Property('IceGrid.Registry.Trace.Topic', false),
  Property('IceGrid.Registry.Trace.TopicManager', false),
  Property('IceGrid.Registry.UserAccounts', false),
];

const IcePatch2PropsData = [
  Property('IcePatch2.ACM.Timeout', false),
  Property('IcePatch2.ACM.Heartbeat', false),
  Property('IcePatch2.ACM.Close', false),
  Property('IcePatch2.ACM', false),
  Property('IcePatch2.AdapterId', false),
  Property('IcePatch2.Endpoints', false),
  Property('IcePatch2.Locator.EndpointSelection', false),
  Property('IcePatch2.Locator.ConnectionCached', false),
  Property('IcePatch2.Locator.PreferSecure', false),
  Property('IcePatch2.Locator.LocatorCacheTimeout', false),
  Property('IcePatch2.Locator.InvocationTimeout', false),
  Property('IcePatch2.Locator.Locator', false),
  Property('IcePatch2.Locator.Router', false),
  Property('IcePatch2.Locator.CollocationOptimized', false),
  Property('IcePatch2.Locator.Context.*', false),
  Property('IcePatch2.Locator', false),
  Property('IcePatch2.PublishedEndpoints', false),
  Property('IcePatch2.ReplicaGroupId', false),
  Property('IcePatch2.Router.EndpointSelection', false),
  Property('IcePatch2.Router.ConnectionCached', false),
  Property('IcePatch2.Router.PreferSecure', false),
  Property('IcePatch2.Router.LocatorCacheTimeout', false),
  Property('IcePatch2.Router.InvocationTimeout', false),
  Property('IcePatch2.Router.Locator', false),
  Property('IcePatch2.Router.Router', false),
  Property('IcePatch2.Router.CollocationOptimized', false),
  Property('IcePatch2.Router.Context.*', false),
  Property('IcePatch2.Router', false),
  Property('IcePatch2.ProxyOptions', false),
  Property('IcePatch2.ThreadPool.Size', false),
  Property('IcePatch2.ThreadPool.SizeMax', false),
  Property('IcePatch2.ThreadPool.SizeWarn', false),
  Property('IcePatch2.ThreadPool.StackSize', false),
  Property('IcePatch2.ThreadPool.Serialize', false),
  Property('IcePatch2.ThreadPool.ThreadIdleTime', false),
  Property('IcePatch2.ThreadPool.ThreadPriority', false),
  Property('IcePatch2.MessageSizeMax', false),
  Property('IcePatch2.Directory', false),
  Property('IcePatch2.InstanceName', false),
];

const IcePatch2ClientPropsData = [
  Property('IcePatch2Client.ChunkSize', false),
  Property('IcePatch2Client.Directory', false),
  Property('IcePatch2Client.Proxy', false),
  Property('IcePatch2Client.Remove', false),
  Property('IcePatch2Client.Thorough', false),
];

const IceSSLPropsData = [
  Property('IceSSL.Alias', false),
  Property('IceSSL.CAs', false),
  Property('IceSSL.CertAuthDir', true, 'IceSSL.CAs'),
  Property('IceSSL.CertAuthFile', true, 'IceSSL.CAs'),
  Property('IceSSL.CertStore', false),
  Property('IceSSL.CertStoreLocation', false),
  Property('IceSSL.CertFile', false),
  Property('IceSSL.CertVerifier', false),
  Property('IceSSL.CheckCertName', false),
  Property('IceSSL.CheckCRL', false),
  Property('IceSSL.Ciphers', false),
  Property('IceSSL.DefaultDir', false),
  Property('IceSSL.DH.*', false),
  Property('IceSSL.DHParams', false),
  Property('IceSSL.EntropyDaemon', false),
  Property('IceSSL.FindCert', false),
  Property('IceSSL.FindCert.*', true),
  Property('IceSSL.InitOpenSSL', false),
  Property('IceSSL.KeyFile', true),
  Property('IceSSL.Keychain', false),
  Property('IceSSL.KeychainPassword', false),
  Property('IceSSL.Keystore', false),
  Property('IceSSL.KeystorePassword', false),
  Property('IceSSL.KeystoreType', false),
  Property('IceSSL.Password', false),
  Property('IceSSL.PasswordCallback', false),
  Property('IceSSL.PasswordRetryMax', false),
  Property('IceSSL.Protocols', false),
  Property('IceSSL.ProtocolVersionMax', false),
  Property('IceSSL.ProtocolVersionMin', false),
  Property('IceSSL.Random', false),
  Property('IceSSL.SchannelStrongCrypto', false),
  Property('IceSSL.Trace.Security', false),
  Property('IceSSL.TrustOnly', false),
  Property('IceSSL.TrustOnly.Client', false),
  Property('IceSSL.TrustOnly.Server', false),
  Property('IceSSL.TrustOnly.Server.*', false),
  Property('IceSSL.Truststore', false),
  Property('IceSSL.TruststorePassword', false),
  Property('IceSSL.TruststoreType', false),
  Property('IceSSL.UsePlatformCAs', false),
  Property('IceSSL.VerifyDepthMax', false),
  Property('IceSSL.VerifyPeer', false),
];

const IceStormAdminPropsData = [
  Property('IceStormAdmin.TopicManager.*', false),
  Property('IceStormAdmin.Host', false),
  Property('IceStormAdmin.Port', false),
];

const IceBTPropsData = [
  Property('IceBT.RcvSize', false),
  Property('IceBT.SndSize', false),
];

const Glacier2PropsData = [
  Property('Glacier2.AddConnectionContext', false),
  Property('Glacier2.Client.ACM.Timeout', false),
  Property('Glacier2.Client.ACM.Heartbeat', false),
  Property('Glacier2.Client.ACM.Close', false),
  Property('Glacier2.Client.ACM', false),
  Property('Glacier2.Client.AdapterId', false),
  Property('Glacier2.Client.Endpoints', false),
  Property('Glacier2.Client.Locator.EndpointSelection', false),
  Property('Glacier2.Client.Locator.ConnectionCached', false),
  Property('Glacier2.Client.Locator.PreferSecure', false),
  Property('Glacier2.Client.Locator.LocatorCacheTimeout', false),
  Property('Glacier2.Client.Locator.InvocationTimeout', false),
  Property('Glacier2.Client.Locator.Locator', false),
  Property('Glacier2.Client.Locator.Router', false),
  Property('Glacier2.Client.Locator.CollocationOptimized', false),
  Property('Glacier2.Client.Locator.Context.*', false),
  Property('Glacier2.Client.Locator', false),
  Property('Glacier2.Client.PublishedEndpoints', false),
  Property('Glacier2.Client.ReplicaGroupId', false),
  Property('Glacier2.Client.Router.EndpointSelection', false),
  Property('Glacier2.Client.Router.ConnectionCached', false),
  Property('Glacier2.Client.Router.PreferSecure', false),
  Property('Glacier2.Client.Router.LocatorCacheTimeout', false),
  Property('Glacier2.Client.Router.InvocationTimeout', false),
  Property('Glacier2.Client.Router.Locator', false),
  Property('Glacier2.Client.Router.Router', false),
  Property('Glacier2.Client.Router.CollocationOptimized', false),
  Property('Glacier2.Client.Router.Context.*', false),
  Property('Glacier2.Client.Router', false),
  Property('Glacier2.Client.ProxyOptions', false),
  Property('Glacier2.Client.ThreadPool.Size', false),
  Property('Glacier2.Client.ThreadPool.SizeMax', false),
  Property('Glacier2.Client.ThreadPool.SizeWarn', false),
  Property('Glacier2.Client.ThreadPool.StackSize', false),
  Property('Glacier2.Client.ThreadPool.Serialize', false),
  Property('Glacier2.Client.ThreadPool.ThreadIdleTime', false),
  Property('Glacier2.Client.ThreadPool.ThreadPriority', false),
  Property('Glacier2.Client.MessageSizeMax', false),
  Property('Glacier2.Client.AlwaysBatch', false),
  Property('Glacier2.Client.Buffered', false),
  Property('Glacier2.Client.ForwardContext', false),
  Property('Glacier2.Client.SleepTime', false),
  Property('Glacier2.Client.Trace.Override', false),
  Property('Glacier2.Client.Trace.Reject', false),
  Property('Glacier2.Client.Trace.Request', false),
  Property('Glacier2.CryptPasswords', false),
  Property('Glacier2.Filter.Address.Reject', false),
  Property('Glacier2.Filter.Address.Accept', false),
  Property('Glacier2.Filter.ProxySizeMax', false),
  Property('Glacier2.Filter.Category.Accept', false),
  Property('Glacier2.Filter.Category.AcceptUser', false),
  Property('Glacier2.Filter.AdapterId.Accept', false),
  Property('Glacier2.Filter.Identity.Accept', false),
  Property('Glacier2.InstanceName', false),
  Property('Glacier2.PermissionsVerifier.EndpointSelection', false),
  Property('Glacier2.PermissionsVerifier.ConnectionCached', false),
  Property('Glacier2.PermissionsVerifier.PreferSecure', false),
  Property('Glacier2.PermissionsVerifier.LocatorCacheTimeout', false),
  Property('Glacier2.PermissionsVerifier.InvocationTimeout', false),
  Property('Glacier2.PermissionsVerifier.Locator', false),
  Property('Glacier2.PermissionsVerifier.Router', false),
  Property('Glacier2.PermissionsVerifier.CollocationOptimized', false),
  Property('Glacier2.PermissionsVerifier.Context.*', false),
  Property('Glacier2.PermissionsVerifier', false),
  Property('Glacier2.ReturnClientProxy', false),
  Property('Glacier2.SSLPermissionsVerifier.EndpointSelection', false),
  Property('Glacier2.SSLPermissionsVerifier.ConnectionCached', false),
  Property('Glacier2.SSLPermissionsVerifier.PreferSecure', false),
  Property('Glacier2.SSLPermissionsVerifier.LocatorCacheTimeout', false),
  Property('Glacier2.SSLPermissionsVerifier.InvocationTimeout', false),
  Property('Glacier2.SSLPermissionsVerifier.Locator', false),
  Property('Glacier2.SSLPermissionsVerifier.Router', false),
  Property('Glacier2.SSLPermissionsVerifier.CollocationOptimized', false),
  Property('Glacier2.SSLPermissionsVerifier.Context.*', false),
  Property('Glacier2.SSLPermissionsVerifier', false),
  Property('Glacier2.RoutingTable.MaxSize', false),
  Property('Glacier2.Server.ACM.Timeout', false),
  Property('Glacier2.Server.ACM.Heartbeat', false),
  Property('Glacier2.Server.ACM.Close', false),
  Property('Glacier2.Server.ACM', false),
  Property('Glacier2.Server.AdapterId', false),
  Property('Glacier2.Server.Endpoints', false),
  Property('Glacier2.Server.Locator.EndpointSelection', false),
  Property('Glacier2.Server.Locator.ConnectionCached', false),
  Property('Glacier2.Server.Locator.PreferSecure', false),
  Property('Glacier2.Server.Locator.LocatorCacheTimeout', false),
  Property('Glacier2.Server.Locator.InvocationTimeout', false),
  Property('Glacier2.Server.Locator.Locator', false),
  Property('Glacier2.Server.Locator.Router', false),
  Property('Glacier2.Server.Locator.CollocationOptimized', false),
  Property('Glacier2.Server.Locator.Context.*', false),
  Property('Glacier2.Server.Locator', false),
  Property('Glacier2.Server.PublishedEndpoints', false),
  Property('Glacier2.Server.ReplicaGroupId', false),
  Property('Glacier2.Server.Router.EndpointSelection', false),
  Property('Glacier2.Server.Router.ConnectionCached', false),
  Property('Glacier2.Server.Router.PreferSecure', false),
  Property('Glacier2.Server.Router.LocatorCacheTimeout', false),
  Property('Glacier2.Server.Router.InvocationTimeout', false),
  Property('Glacier2.Server.Router.Locator', false),
  Property('Glacier2.Server.Router.Router', false),
  Property('Glacier2.Server.Router.CollocationOptimized', false),
  Property('Glacier2.Server.Router.Context.*', false),
  Property('Glacier2.Server.Router', false),
  Property('Glacier2.Server.ProxyOptions', false),
  Property('Glacier2.Server.ThreadPool.Size', false),
  Property('Glacier2.Server.ThreadPool.SizeMax', false),
  Property('Glacier2.Server.ThreadPool.SizeWarn', false),
  Property('Glacier2.Server.ThreadPool.StackSize', false),
  Property('Glacier2.Server.ThreadPool.Serialize', false),
  Property('Glacier2.Server.ThreadPool.ThreadIdleTime', false),
  Property('Glacier2.Server.ThreadPool.ThreadPriority', false),
  Property('Glacier2.Server.MessageSizeMax', false),
  Property('Glacier2.Server.AlwaysBatch', false),
  Property('Glacier2.Server.Buffered', false),
  Property('Glacier2.Server.ForwardContext', false),
  Property('Glacier2.Server.SleepTime', false),
  Property('Glacier2.Server.Trace.Override', false),
  Property('Glacier2.Server.Trace.Request', false),
  Property('Glacier2.SessionManager.EndpointSelection', false),
  Property('Glacier2.SessionManager.ConnectionCached', false),
  Property('Glacier2.SessionManager.PreferSecure', false),
  Property('Glacier2.SessionManager.LocatorCacheTimeout', false),
  Property('Glacier2.SessionManager.InvocationTimeout', false),
  Property('Glacier2.SessionManager.Locator', false),
  Property('Glacier2.SessionManager.Router', false),
  Property('Glacier2.SessionManager.CollocationOptimized', false),
  Property('Glacier2.SessionManager.Context.*', false),
  Property('Glacier2.SessionManager', false),
  Property('Glacier2.SSLSessionManager.EndpointSelection', false),
  Property('Glacier2.SSLSessionManager.ConnectionCached', false),
  Property('Glacier2.SSLSessionManager.PreferSecure', false),
  Property('Glacier2.SSLSessionManager.LocatorCacheTimeout', false),
  Property('Glacier2.SSLSessionManager.InvocationTimeout', false),
  Property('Glacier2.SSLSessionManager.Locator', false),
  Property('Glacier2.SSLSessionManager.Router', false),
  Property('Glacier2.SSLSessionManager.CollocationOptimized', false),
  Property('Glacier2.SSLSessionManager.Context.*', false),
  Property('Glacier2.SSLSessionManager', false),
  Property('Glacier2.SessionTimeout', false),
  Property('Glacier2.Trace.RoutingTable', false),
  Property('Glacier2.Trace.Session', false),
];

const Glacier2CryptPermissionsVerifierPropsData = [
  Property('Glacier2CryptPermissionsVerifier.*.PermissionsVerifier', false),
  Property(
      'Glacier2CryptPermissionsVerifier.*.AdminPermissionsVerifier', false),
];

const FreezePropsData = [
  Property('Freeze.DbEnv.*.CheckpointPeriod', false),
  Property('Freeze.DbEnv.*.DbHome', false),
  Property('Freeze.DbEnv.*.DbPrivate', false),
  Property('Freeze.DbEnv.*.DbRecoverFatal', false),
  Property('Freeze.DbEnv.*.EncodingVersion', false),
  Property('Freeze.DbEnv.*.LockFile', false),
  Property('Freeze.DbEnv.*.OldLogsAutoDelete', false),
  Property('Freeze.DbEnv.*.PeriodicCheckpointMinSize', false),
  Property('Freeze.Evictor.*.BtreeMinKey', false),
  Property('Freeze.Evictor.*.Checksum', false),
  Property('Freeze.Evictor.*.MaxTxSize', false),
  Property('Freeze.Evictor.*.PageSize', false),
  Property('Freeze.Evictor.*.PopulateEmptyIndices', false),
  Property('Freeze.Evictor.*.RollbackOnUserException', false),
  Property('Freeze.Evictor.*.SavePeriod', false),
  Property('Freeze.Evictor.*.SaveSizeTrigger', false),
  Property('Freeze.Evictor.*.StreamTimeout', false),
  Property('Freeze.Map.*.BtreeMinKey', false),
  Property('Freeze.Map.*.Checksum', false),
  Property('Freeze.Map.*.PageSize', false),
  Property('Freeze.Trace.DbEnv', false),
  Property('Freeze.Trace.Evictor', false),
  Property('Freeze.Trace.Map', false),
  Property('Freeze.Trace.Transaction', false),
  Property('Freeze.Warn.Deadlocks', false),
  Property('Freeze.Warn.Rollback', false),
];

const validProps = [
  IceMXPropsData,
  IceDiscoveryPropsData,
  IceLocatorDiscoveryPropsData,
  IceBoxPropsData,
  IceBoxAdminPropsData,
  IceBridgePropsData,
  IceGridAdminPropsData,
  IceGridPropsData,
  IcePatch2PropsData,
  IcePatch2ClientPropsData,
  IceSSLPropsData,
  IceStormAdminPropsData,
  IceBTPropsData,
  Glacier2PropsData,
  Glacier2CryptPermissionsVerifierPropsData,
  FreezePropsData,
];

const clPropNames = [
  'Ice',
  'IceMX',
  'IceDiscovery',
  'IceLocatorDiscovery',
  'IceBox',
  'IceBoxAdmin',
  'IceBridge',
  'IceGridAdmin',
  'IceGrid',
  'IcePatch2',
  'IcePatch2Client',
  'IceSSL',
  'IceStormAdmin',
  'IceBT',
  'Glacier2',
  'Glacier2CryptPermissionsVerifier',
  'Freeze',
];
